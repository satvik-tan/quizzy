name: Deploy Node.js to Vercel

on:
  push:
    branches:
      - main # or your main branch
  pull_request:
    branches:
      - main # or your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Adjust to your Node.js version

      - name: Detect Package Manager
        id: detect-package-manager
        run: |
          if [ -f "yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::yarn"
            echo "::set-output name=cache_path::$(yarn cache dir)"
          elif [ -f "pnpm-lock.yaml" ]; then
            echo "::set-output name=manager::pnpm"
            echo "::set-output name=command::pnpm"
            echo "::set-output name=cache_path::$HOME/.pnpm-store"
          else
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::npm"
            echo "::set-output name=cache_path::$(npm config get cache)"
          fi
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.detect-package-manager.outputs.cache_path }}
          key: ${{ runner.os }}-${{ steps.detect-package-manager.outputs.manager }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.detect-package-manager.outputs.manager }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.command }} install

      - name: Build project
        run: ${{ steps.detect-package-manager.outputs.command }} run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Vercel project token
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }} # Vercel organization ID
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }} # Vercel project ID
          working-directory: . # Adjust if your build output is in a subdirectory
          scope: ${{ secrets.VERCEL_ORG_ID }}
          alias-domains: |
            your-domain.com #optional, add your production domain